pipeline {
    agent any
   
     environment {
        // AWS ECR details
        AWS_REGION = 'us-east-1'
        ECR_REPO = 'nodejs-container'
        IMAGE_NAME = 'nodeapplication'
        IMAGE_TAG = 'latest'

        // AWS credentials ID in Jenkins
        AWS_CREDENTIALS_ID = '5bee2370-6a4f-4d90-a51a-52eb5632c548'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image from the NodeJsApp directory
                    docker.build('nodeapplication:latest', './NodeJsApp').inside{sh 'echo "Hello"'}
                }
            }
        }
        
        
       stage('Check Running Process') {
            steps {
                script {
                    // Check if the process is running
                    def processName = 'server.js'
                    def isRunning = sh(script: "ps aux | grep -v grep | grep ${processName}", returnStatus: true) == 0

                    if (isRunning) {
                        echo "${processName} is running."
                        sh "aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO"
                    

                    // Tag the Docker image with ECR repository information
                        sh "docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_REPO/$IMAGE_NAME:$IMAGE_TAG"

                    // Push the Docker image to ECR
                        sh "docker push $ECR_REPO/$IMAGE_NAME:$IMAGE_TAG"
                    } else {
                        error("${processName} is not running.")
                    }
                }
            }
        }
    }
}
